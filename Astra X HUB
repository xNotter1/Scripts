--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.14) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==2) then function v22()local v31=v1(v16,v19,v19);v19=v19 + 1 ;return v31;end v23=nil;function v23()local v32,v33=v1(v16,v19,v19 + (5 -3) );v19=v19 + (5 -3) ;return (v33 * (493 -237)) + v32 ;end v18=3;end if (v18==4) then function v25()local v34=v24();local v35=v24();local v36=2 -1 ;local v37=(v21(v35,620 -(555 + 64) ,951 -(857 + 74) ) * (((1053 -483) -(367 + 201))^32)) + v34 ;local v38=v21(v35,948 -(214 + 713) ,8 + 23 );local v39=((v21(v35,6 + 26 )==(878 -(282 + 595))) and  -(1638 -(1523 + 114))) or 1 ;if (v38==(0 + 0)) then if (v37==(0 -0)) then return v39 * (1065 -(68 + 997)) ;else v38=1271 -((414 -188) + 1044) ;v36=0;end elseif (v38==(8913 -(7216 -(87 + 263)))) then return ((v37==(117 -(32 + 85))) and (v39 * ((1 + 0)/(0 + 0)))) or (v39 * NaN) ;end return v8(v39,v38-((2160 -(67 + 113)) -(655 + 237 + 65)) ) * (v36 + (v37/(2^(123 -71)))) ;end v26=nil;function v26(v40)local v41=0 -0 ;local v42;local v43;while true do if (v41==((1 -0) + 0)) then v42=v3(v16,v19,(v19 + v40) -(3 -2) );v19=v19 + v40 ;v41=2 + 0 ;end if ((952 -(796 + 6 + 150))==v41) then v42=nil;if  not v40 then v40=v24();if (v40==(791 -(368 + 423))) then return "";end end v41=1188 -(1069 + 118) ;end if (v41==(4 -2)) then v43={};for v89=2 -1 , #v42 do v43[v89]=v2(v1(v3(v42,v89,v89)));end v41=5 -2 ;end if (v41==(3 + 0)) then return v6(v43);end end end v18=5;end if (v18==6) then v29=nil;function v29()local v44=0;local v45;local v46;local v47;local v48;local v49;local v50;local v51;local v52;while true do if (v44==(1750 -(1013 + 736))) then v47=nil;v48=nil;v44=2;end if (v44==(3 + 0)) then v51=nil;v52=nil;v44=4;end if ((0 -0)==v44) then v45=0;v46=nil;v44=3 -2 ;end if (v44~=4) then else while true do if (v45~=1) then else v48=nil;v49=nil;v45=869 -(550 + 317) ;end if (v45==0) then local v95=0 -0 ;while true do if (v95~=(1 -0)) then else v45=2 -1 ;break;end if (v95==0) then v46=0;v47=nil;v95=1;end end end if (v45~=3) then else v52=nil;while true do local v96=285 -(134 + 151) ;while true do if (v96==1) then if (v46==(1668 -(970 + 695))) then local v99=0;local v100;while true do if (v99~=0) then else v100=0;while true do if (v100~=0) then else local v291=0;local v292;while true do if (v291==(0 -0)) then v292=0;while true do if (v292~=0) then else for v368=1991 -(582 + 1408) ,v24() do v48[v368-(3 -2) ]=v29();end return v50;end end break;end end end end break;end end end if (v46==2) then local v101=0 -0 ;local v102;while true do if (v101==(0 -0)) then v102=0;while true do if (v102==0) then local v293=1824 -(1195 + 629) ;while true do if (v293==1) then v102=1 -0 ;break;end if (v293==(241 -(187 + 54))) then for v351=781 -(162 + 618) ,v51 do local v352=0 + 0 ;local v353;local v354;while true do if (v352~=0) then else local v370=0 + 0 ;while true do if ((0 -0)==v370) then v353=v22();v354=nil;v370=1;end if ((1 -0)==v370) then v352=1;break;end end end if (v352~=(1 + 0)) then else if (v353==1) then v354=v22()~=(1636 -(1373 + 263)) ;elseif (v353==2) then v354=v25();elseif (v353==(1003 -(451 + 549))) then v354=v26();end v52[v351]=v354;break;end end end v50[1 + 2 ]=v22();v293=1 -0 ;end end end if (v102~=1) then else for v320=1,v24() do local v321=0 -0 ;local v322;local v323;while true do if (v321==(1384 -(746 + 638))) then v322=0 + 0 ;v323=nil;v321=1;end if (v321==1) then while true do if (v322==0) then v323=v22();if (v21(v323,1,1)~=(0 -0)) then else local v372=341 -(218 + 123) ;local v373;local v374;local v375;local v376;local v377;local v378;while true do if (v372==(1582 -(1535 + 46))) then v375=nil;v376=nil;v372=2;end if (v372~=(3 + 0)) then else while true do if (v373==0) then v374=0 + 0 ;v375=nil;v373=561 -(306 + 254) ;end if (v373~=(1 + 0)) then else local v389=0 -0 ;while true do if (v389==0) then v376=nil;v377=nil;v389=1;end if (v389==1) then v373=1469 -(899 + 568) ;break;end end end if ((2 + 0)~=v373) then else v378=nil;while true do if (v374~=(4 -2)) then else while true do if (v375~=(604 -(268 + 335))) then else local v392=0;local v393;while true do if (v392==(290 -(60 + 230))) then v393=572 -(426 + 146) ;while true do if (1==v393) then v375=1 + 1 ;break;end if (v393==0) then local v401=1456 -(282 + 1174) ;while true do if ((812 -(569 + 242))~=v401) then else v393=1;break;end if (v401~=0) then else local v407=0;while true do if (v407~=1) then else v401=1;break;end if (v407==(0 -0)) then v378={v23(),v23(),nil,nil};if (v376==(1024 -(706 + 318))) then local v408=0;local v409;while true do if ((1251 -(721 + 530))==v408) then v409=1271 -(945 + 326) ;while true do if (v409==0) then v378[7 -4 ]=v23();v378[4 + 0 ]=v23();break;end end break;end end elseif (v376==(701 -(271 + 429))) then v378[3]=v24();elseif (v376==2) then v378[3]=v24() -(2^(15 + 1)) ;elseif (v376==3) then local v414=0;local v415;local v416;while true do if (v414==(1501 -(1408 + 92))) then while true do if (v415~=0) then else v416=1086 -(461 + 625) ;while true do if (v416~=(1288 -(993 + 295))) then else v378[3]=v24() -((1 + 1)^16) ;v378[4]=v23();break;end end break;end end break;end if (v414==(1171 -(418 + 753))) then v415=0;v416=nil;v414=1 + 0 ;end end end v407=1 + 0 ;end end end end end end break;end end end if (v375==(1 + 1)) then local v394=0;local v395;while true do if (v394==0) then v395=0;while true do if (0==v395) then if (v21(v377,1,1 + 0 )==1) then v378[2]=v52[v378[531 -(406 + 123) ]];end if (v21(v377,1771 -(1749 + 20) ,1 + 1 )==(1323 -(1249 + 73))) then v378[3]=v52[v378[2 + 1 ]];end v395=1146 -(466 + 679) ;end if (1~=v395) then else v375=3;break;end end break;end end end if (v375~=(6 -3)) then else if (v21(v377,8 -5 ,1903 -(106 + 1794) )==(1 + 0)) then v378[2 + 2 ]=v52[v378[4]];end v47[v320]=v378;break;end if (v375==(0 -0)) then local v397=0 -0 ;local v398;while true do if ((114 -(4 + 110))==v397) then v398=584 -(57 + 527) ;while true do if (v398==(1427 -(41 + 1386))) then local v402=0;while true do if (v402~=1) then else v398=1;break;end if (v402==(103 -(17 + 86))) then v376=v21(v323,2,3);v377=v21(v323,4,6);v402=1;end end end if ((1 + 0)==v398) then v375=1;break;end end break;end end end end break;end if (v374==0) then local v390=0;while true do if (v390~=0) then else v375=0 -0 ;v376=nil;v390=1;end if (v390~=1) then else v374=1;break;end end end if (v374~=(2 -1)) then else local v391=0;while true do if (v391==1) then v374=168 -(122 + 44) ;break;end if (v391==(0 -0)) then v377=nil;v378=nil;v391=1;end end end end break;end end break;end if (v372~=0) then else v373=0 -0 ;v374=nil;v372=1 + 0 ;end if (v372==(1 + 1)) then v377=nil;v378=nil;v372=3;end end end break;end end break;end end end v46=5 -2 ;break;end end break;end end end break;end if (v96~=(65 -(30 + 35))) then else local v98=0;while true do if (v98==(1 + 0)) then v96=1258 -(1043 + 214) ;break;end if (v98~=0) then else if (v46==(0 -0)) then local v197=0;local v198;while true do if (v197==(1212 -(323 + 889))) then v198=0 -0 ;while true do if (v198==1) then v49={};v46=1;break;end if (v198==0) then v47={};v48={};v198=581 -(361 + 219) ;end end break;end end end if (v46==1) then local v199=0;local v200;local v201;while true do if (1==v199) then while true do if (v200==0) then v201=0;while true do if (v201==0) then local v359=0;while true do if (v359==(321 -(53 + 267))) then v201=1 + 0 ;break;end if (v359==0) then v50={v47,v48,nil,v49};v51=v24();v359=1;end end end if (v201==1) then v52={};v46=7 -5 ;break;end end break;end end break;end if (v199==(0 + 0)) then v200=0;v201=nil;v199=1 + 0 ;end end end v98=851 -(20 + 830) ;end end end end end break;end if (v45==2) then v50=nil;v51=nil;v45=3 + 0 ;end end break;end if (v44~=(128 -(116 + 10))) then else v49=nil;v50=nil;v44=1 + 2 ;end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v53)if (v1(v53,2)==79) then v20=v0(v3(v53,1,1));return "";else local v82=0;local v83;while true do if (v82==0) then v83=v2(v0(v53,16));if v20 then local v97=v5(v83,v20);v20=nil;return v97;else return v83;end break;end end end end);v18=1;end if (v18==3) then v24=nil;function v24()local v54=738 -(542 + 196) ;local v55;local v56;local v57;local v58;while true do if (v54==1) then return (v58 * (35965474 -19188258)) + (v57 * (19138 + 46398)) + (v56 * ((594 -463) + 125)) + v55 ;end if (v54==(0 + 0 + 0)) then v55,v56,v57,v58=v1(v16,v19,v19 + (1124 -((1095 -(553 + 424)) + (1896 -893))) );v19=v19 + (11 -7) ;v54=2 -1 ;end end end v25=nil;v18=4;end if (v18==7) then function v30(v59,v60,v61)local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...)local v68=v62;local v69=v63;local v70=v64;local v71=v28;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v84=0,v76 do if (v84>=v70) then v74[v84-v70 ]=v75[v84 + 1 ];else v78[v84]=v75[v84 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=38) then if (v81<=18) then if (v81<=8) then if (v81<=3) then if (v81<=1) then if (v81>0) then for v202=v80[2],v80[3] do v78[v202]=nil;end else v78[v80[2]]=v30(v69[v80[3]],nil,v61);end elseif (v81>2) then v78[v80[2]]=v61[v80[3]];else v78[v80[2]]=v60[v80[3]];end elseif (v81<=5) then if (v81>4) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v108=0;local v109;local v110;local v111;local v112;while true do if (v108==0) then v109=v80[2];v110,v111=v71(v78[v109](v78[v109 + 1 ]));v108=1;end if (v108==1) then v73=(v111 + v109) -1 ;v112=0;v108=2;end if (v108==2) then for v294=v109,v73 do local v295=0;while true do if (v295==0) then v112=v112 + 1 ;v78[v294]=v110[v112];break;end end end break;end end end elseif (v81<=6) then local v113=v80[2];v78[v113]=v78[v113](v13(v78,v113 + 1 ,v73));elseif (v81>7) then local v224=0;local v225;local v226;while true do if (v224==1) then for v338=1, #v77 do local v339=0;local v340;while true do if (v339==0) then v340=v77[v338];for v360=0, #v340 do local v361=0;local v362;local v363;local v364;while true do if (v361==1) then v364=v362[2];if ((v363==v78) and (v364>=v225)) then local v385=0;while true do if (0==v385) then v226[v364]=v363[v364];v362[1]=v226;break;end end end break;end if (v361==0) then v362=v340[v360];v363=v362[1];v361=1;end end end break;end end end break;end if (v224==0) then v225=v80[2];v226={};v224=1;end end else local v227=0;local v228;while true do if (v227==0) then v228=v80[2];v78[v228](v13(v78,v228 + 1 ,v73));break;end end end elseif (v81<=13) then if (v81<=10) then if (v81==9) then local v115=v80[2];local v116=v78[v115];local v117=v78[v115 + 2 ];if (v117>0) then if (v116>v78[v115 + 1 ]) then v72=v80[3];else v78[v115 + 3 ]=v116;end elseif (v116<v78[v115 + 1 ]) then v72=v80[3];else v78[v115 + 3 ]=v116;end else local v118=v80[2];local v119=v78[v118 + 2 ];local v120=v78[v118] + v119 ;v78[v118]=v120;if (v119>0) then if (v120<=v78[v118 + 1 ]) then v72=v80[3];v78[v118 + 3 ]=v120;end elseif (v120>=v78[v118 + 1 ]) then v72=v80[3];v78[v118 + 3 ]=v120;end end elseif (v81<=11) then v78[v80[2]]=v80[3] + v78[v80[4]] ;elseif (v81==12) then local v229=v80[2];do return v78[v229](v13(v78,v229 + 1 ,v80[3]));end else v78[v80[2]]();end elseif (v81<=15) then if (v81==14) then v78[v80[2]]={};else v78[v80[2]]=v78[v80[3]]%v80[4] ;end elseif (v81<=16) then local v125=0;local v126;local v127;local v128;while true do if (v125==0) then v126=v80[2];v127=v78[v126 + 2 ];v125=1;end if (1==v125) then v128=v78[v126] + v127 ;v78[v126]=v128;v125=2;end if (v125==2) then if (v127>0) then if (v128<=v78[v126 + 1 ]) then local v348=0;while true do if (v348==0) then v72=v80[3];v78[v126 + 3 ]=v128;break;end end end elseif (v128>=v78[v126 + 1 ]) then v72=v80[3];v78[v126 + 3 ]=v128;end break;end end elseif (v81==17) then local v230=0;local v231;while true do if (v230==0) then v231=v80[2];v78[v231](v13(v78,v231 + 1 ,v80[3]));break;end end else do return;end end elseif (v81<=28) then if (v81<=23) then if (v81<=20) then if (v81>19) then for v204=v80[2],v80[3] do v78[v204]=nil;end else local v129=v80[2];v78[v129]=v78[v129](v13(v78,v129 + 1 ,v73));end elseif (v81<=21) then v78[v80[2]]=v78[v80[3]]%v78[v80[4]] ;elseif (v81>22) then local v232=0;local v233;while true do if (v232==0) then v233=v80[2];v78[v233](v78[v233 + 1 ]);break;end end elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=25) then if (v81==24) then v78[v80[2]]=v78[v80[3]] + v80[4] ;else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=26) then v78[v80[2]]=v78[v80[3]]%v80[4] ;elseif (v81==27) then v78[v80[2]]=v60[v80[3]];elseif  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=33) then if (v81<=30) then if (v81==29) then v78[v80[2]]=v78[v80[3]][v80[4]];else v78[v80[2]][v80[3]]=v80[4];end elseif (v81<=31) then v78[v80[2]][v80[3]]=v80[4];elseif (v81>32) then v78[v80[2]]=v80[3]~=0 ;else do return;end end elseif (v81<=35) then if (v81==34) then local v141=v80[2];do return v13(v78,v141,v73);end else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=36) then v78[v80[2]]=v78[v80[3]];elseif (v81>37) then v78[v80[2]]= #v78[v80[3]];else local v238=0;local v239;while true do if (0==v238) then v239=v80[2];v78[v239]=v78[v239](v13(v78,v239 + 1 ,v80[3]));break;end end end elseif (v81<=57) then if (v81<=47) then if (v81<=42) then if (v81<=40) then if (v81>39) then local v146=v80[2];local v147,v148=v71(v78[v146](v13(v78,v146 + 1 ,v80[3])));v73=(v148 + v146) -1 ;local v149=0;for v206=v146,v73 do v149=v149 + 1 ;v78[v206]=v147[v149];end else local v150=v80[2];local v151=v78[v80[3]];v78[v150 + 1 ]=v151;v78[v150]=v151[v80[4]];end elseif (v81>41) then local v155=0;local v156;local v157;while true do if (v155==0) then v156=v80[2];v157={};v155=1;end if (v155==1) then for v306=1, #v77 do local v307=v77[v306];for v330=0, #v307 do local v331=0;local v332;local v333;local v334;while true do if (v331==0) then v332=v307[v330];v333=v332[1];v331=1;end if (v331==1) then v334=v332[2];if ((v333==v78) and (v334>=v156)) then local v367=0;while true do if (v367==0) then v157[v334]=v333[v334];v332[1]=v157;break;end end end break;end end end end break;end end else local v158=v80[2];local v159,v160=v71(v78[v158](v13(v78,v158 + 1 ,v73)));v73=(v160 + v158) -1 ;local v161=0;for v209=v158,v73 do v161=v161 + 1 ;v78[v209]=v159[v161];end end elseif (v81<=44) then if (v81==43) then v78[v80[2]]();else local v162=v80[2];local v163=v78[v80[3]];v78[v162 + 1 ]=v163;v78[v162]=v163[v80[4]];end elseif (v81<=45) then v78[v80[2]]={};elseif (v81==46) then local v240=v80[2];local v241,v242=v71(v78[v240](v13(v78,v240 + 1 ,v80[3])));v73=(v242 + v240) -1 ;local v243=0;for v273=v240,v73 do v243=v243 + 1 ;v78[v273]=v241[v243];end else v78[v80[2]]=v80[3];end elseif (v81<=52) then if (v81<=49) then if (v81==48) then v78[v80[2]]=v30(v69[v80[3]],nil,v61);else v72=v80[3];end elseif (v81<=50) then v72=v80[3];elseif (v81>51) then local v246=v80[2];v78[v246]=v78[v246](v13(v78,v246 + 1 ,v80[3]));elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=54) then if (v81>53) then local v171=v80[2];do return v13(v78,v171,v73);end else local v172=v80[2];v78[v172]=v78[v172]();end elseif (v81<=55) then local v174=0;local v175;local v176;local v177;local v178;while true do if (v174==1) then v73=(v177 + v175) -1 ;v178=0;v174=2;end if (v174==0) then v175=v80[2];v176,v177=v71(v78[v175](v13(v78,v175 + 1 ,v73)));v174=1;end if (v174==2) then for v309=v175,v73 do v178=v178 + 1 ;v78[v309]=v176[v178];end break;end end elseif (v81==56) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]= #v78[v80[3]];end elseif (v81<=67) then if (v81<=62) then if (v81<=59) then if (v81>58) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v179=v69[v80[3]];local v180;local v181={};v180=v10({},{__index=function(v212,v213)local v214=v181[v213];return v214[1][v214[2]];end,__newindex=function(v215,v216,v217)local v218=0;local v219;while true do if (v218==0) then v219=v181[v216];v219[1][v219[2]]=v217;break;end end end});for v220=1,v80[4] do v72=v72 + 1 ;local v221=v68[v72];if (v221[1]==36) then v181[v220-1 ]={v78,v221[3]};else v181[v220-1 ]={v60,v221[3]};end v77[ #v77 + 1 ]=v181;end v78[v80[2]]=v30(v179,v180,v61);end elseif (v81<=60) then v78[v80[2]]=v78[v80[3]]%v78[v80[4]] ;elseif (v81>61) then local v250=v80[2];v78[v250](v13(v78,v250 + 1 ,v80[3]));else v78[v80[2]]=v78[v80[3]];end elseif (v81<=64) then if (v81>63) then local v184=v80[2];local v185=v78[v184];local v186=v78[v184 + 2 ];if (v186>0) then if (v185>v78[v184 + 1 ]) then v72=v80[3];else v78[v184 + 3 ]=v185;end elseif (v185<v78[v184 + 1 ]) then v72=v80[3];else v78[v184 + 3 ]=v185;end else v78[v80[2]]=v61[v80[3]];end elseif (v81<=65) then v78[v80[2]]=v78[v80[3]] + v80[4] ;elseif (v81>66) then local v253=v69[v80[3]];local v254;local v255={};v254=v10({},{__index=function(v279,v280)local v281=0;local v282;while true do if (v281==0) then v282=v255[v280];return v282[1][v282[2]];end end end,__newindex=function(v283,v284,v285)local v286=v255[v284];v286[1][v286[2]]=v285;end});for v288=1,v80[4] do v72=v72 + 1 ;local v289=v68[v72];if (v289[1]==36) then v255[v288-1 ]={v78,v289[3]};else v255[v288-1 ]={v60,v289[3]};end v77[ #v77 + 1 ]=v255;end v78[v80[2]]=v30(v253,v254,v61);else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=72) then if (v81<=69) then if (v81==68) then local v190=v80[2];do return v78[v190](v13(v78,v190 + 1 ,v80[3]));end else local v191=v80[2];v78[v191](v78[v191 + 1 ]);end elseif (v81<=70) then local v192=v80[2];v78[v192](v13(v78,v192 + 1 ,v73));elseif (v81==71) then v78[v80[2]]=v80[3] + v78[v80[4]] ;else local v260=0;local v261;local v262;local v263;local v264;while true do if (v260==0) then v261=v80[2];v262,v263=v71(v78[v261](v78[v261 + 1 ]));v260=1;end if (v260==1) then v73=(v263 + v261) -1 ;v264=0;v260=2;end if (v260==2) then for v342=v261,v73 do v264=v264 + 1 ;v78[v342]=v262[v264];end break;end end end elseif (v81<=74) then if (v81>73) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81<=75) then v78[v80[2]]=v80[3];elseif (v81==76) then local v266=v80[2];v78[v266]=v78[v266]();elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end v72=v72 + 1 ;end end;end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v65,v66,v67)if v67 then local v87=(v65/(((755 -(239 + 514)) + 0)^(v66-(1 + 0))))%((2 + 0)^(((v67-(1 + 0)) -(v66-(1 + 0))) + (2 -1))) ;return v87-(v87%(2 -1)) ;else local v88=(4 -2)^(v66-(1 + 0 + 0)) ;return (((v65%(v88 + v88))>=v88) and 1) or (0 -(1329 -(797 + 532))) ;end end v22=nil;v18=2;end end end v15("LOL!9E3O0003063O00737472696E6703043O006368617203043O00627974652O033O0073756203053O0062697433322O033O0062697403043O0062786F7203053O007461626C6503063O00636F6E63617403063O00696E73657274030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403483O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F7848657074632F4B61766F2D55492D4C6962726172792F6D61696E2F736F757263652E6C756103093O004372656174654C6962030D3O00F0D0CF37E7FBFF5ECD83F310C403083O007EB1A3BB4586DBA703073O0010C838D5F92DD903053O009C43AD4AA503063O004E657754616203043O0019B6401803073O002654D72976DC4603063O00601A230BFB4203053O009E3076427203103O009E2A192076B7E8AA28233561ACEBBF3703073O009BCB44705613C5030B3O0061DC3BF9737BF7F156C92503083O009826BD569C20188503053O00D343AF43EE03043O00269C37C703073O008B6F792C1A60E903083O0023C81D1C4873149A030A3O004E657753656374696F6E03043O0034BED8D103073O005479DFB1BFED4C03063O008B5AC8B93F4203083O00A1DB36A9C05A305003103O007C4C09334C501324457103374052143603043O0045292260030B3O009BC2DA0F3128AECAC71E1103063O004BDCA3B76A6203053O002DAE8332CB03053O00B962DAEB5703073O00E82E22E2D7BED803063O00CAAB5C4786BE030A3O004E65774B657962696E6403083O001DCE2B8F25C419A103043O00E849A14C030C3O008FD6455A12BEEC6B7410BDD603053O007EDBB9223D03043O00456E756D03073O004B6579436F646503013O004603093O004E657742752O746F6E03063O002EFA517D726403083O00876CAE3E121E179303063O0094DD25C414BD03083O00A7D6894AAB78CE532O033O00AEC30203063O00C7EB90523D982O033O0022258903043O004B6776D9030B3O00E9557D11F93DC8587F06AA03063O007EA7341074D9030B3O00E62F2D85F43AF3C421329303073O009CA84E40E0D47903063O0026E7A8EC08FA03043O00AE678EC5030B3O007829523D657DF75A274D2B03073O009836483F58453E03093O004E6577546F2O676C65030B3O00E7D1FE59C689C649D9C5E003043O003CB4A48E03133O0068C4B17A6CC4B12076652067C3BCC3A76CC3BC03093O004E6577536C6964657203093O006F5F092214FD175D5A03073O0072383E6549478D03053O0090C0E185F903043O00A4D889BB025O00407F40026O00304003093O00F8F33CA296F11CD7F403073O006BB28651D2C69E03073O000227B2EA8B794F03053O00CA586EE2A6025O00C07240026O004940030E3O00EA0184FEC4CA1B87B7F3CA0A8EF303053O00AAA36FE297030A3O00C4B04E4659C4B0454C44030B3O003531A0330E132C0970A46C03073O00497150D2582E57030B3O00A52DDF19A7A529D552F1D503053O0087E14CAD72030C3O002FE3B1A6A9AFB41BE190A5AE03073O00C77A8DD8D0CCDD030C3O0098D319E67DE4BEDC1CD86DF403063O0096CDBD709018030B3O001781A9451EC83014288DB103083O007045E4DF2C64E871030B3O00E61A11DAAC3CA7D0120EDD03073O00E6B47F67B3D61C03083O00BC005E54E869D5AE03073O0080EC653F26842103053O009CAC1056BA03073O00AFCCC97124D68B03133O0077DE3CCF0B498C19D502428C12C90A07E13AD803053O006427AC55BC03133O009D6AB0933CA338958935A8389E953DED55B68403053O0053CD18D9E003183O00C4CAD534E8C28D1BF4CCC833E2D68D0EEFC8D831E7D1C22F03043O005D86A5AD03183O009CFDD9CB34C9F258ACFBC4CC3EDDF24DB7FFD4CE3BDABD6C03083O001EDE92A1A25AAED203083O00C84F744AC647641303043O006A852E1003083O00752177BC79494C3903063O00203840139C3A03093O0071DAF04552B2B06CF803073O00E03AA885363A9203093O0072445EEE7DC6B73D6903083O006B39362B9D15E6E7030D3O00F5821FFFB89CE3DE8C14FBBDCF03073O00AFBBEB7195D9BC030D3O0012A68F46E2395439A88442E76A03073O00185CCFE12C831903103O0066C6AA481E6F0BFEA15F0F7859CAF81E03063O001D2BB3D82C7B03103O0090CC3248B8CB6061A4CA3449AFC0601E03043O002CDDB94003093O0025F54D5E771BCF2O5D03053O00136187283F03093O008A4E363A2O2B86493103063O0051CE3C535B4F2O033O00658AE403083O00C42ECBB0124FA32D2O033O0093034A03073O008FD8421E7E449B03223O00592O45542041205045542120F09F94A520285065742053696D756C61746F72205829030C3O0089C718C5D1A6C5A188C402D303083O0081CAA86DABA5C3B7030C3O00015722D6CA11F4627A3BD7C603073O0086423857B8BE74030C3O001F3908AF59D8313A33370CA903083O00555C5169DB798B41031E3O00D1B644563CC6F2A6104674DEE9F3564A6E9FF2A758406E9FEDB65F5570DA03063O00BF9DD330251C030C3O00FD06E41D29CC1AF05C1CD30603053O005ABF7F947C03093O007A8E3C13388A21137D03043O007718E74E03083O004E65774C6162656C030D3O00A33EB158DD0029C231E562E96203073O0071E24DC52ABC2003143O002O17F0B07A14EDF52238FBA12E13E6F66E44A3ED03043O00D55A769403143O00621AF475455A20BA53411B32F44E63543AA0535F03053O002D3B4ED4360092012O0012033O00013O0020495O0002001203000100013O002049000100010003001203000200013O002049000200020004001203000300053O0006380003000A000100010004313O000A0001001203000300063O002049000400030007001203000500083O002049000500050009001203000600083O00204900060006000A00064300073O000100062O00243O00054O00243O00064O00248O00243O00044O00243O00014O00243O00023O0012030008000B3O0012030009000C3O00202700090009000D00122F000B000E4O002E0009000B4O000600083O00022O004C00080001000200204900090008000F2O003D000A00073O00122F000B00103O00122F000C00114O0034000A000C00022O003D000B00073O00122F000C00123O00122F000D00134O002E000B000D4O000600093O0002002027000A000900142O003D000C00073O00122F000D00153O00122F000E00164O002E000C000E4O0006000A3O0002002027000B000900142O003D000D00073O00122F000E00173O00122F000F00184O002E000D000F4O0006000B3O0002002027000C000900142O003D000E00073O00122F000F00193O00122F0010001A4O002E000E00104O0006000C3O0002002027000D000900142O003D000F00073O00122F0010001B3O00122F0011001C4O002E000F00114O0006000D3O0002002027000E000900142O003D001000073O00122F0011001D3O00122F0012001E4O002E001000124O0006000E3O0002002027000F000900142O003D001100073O00122F0012001F3O00122F001300204O002E001100134O0006000F3O00020020270010000A00212O003D001200073O00122F001300223O00122F001400234O002E001200144O000600103O00020020270011000B00212O003D001300073O00122F001400243O00122F001500254O002E001300154O000600113O00020020270012000C00212O003D001400073O00122F001500263O00122F001600274O002E001400164O000600123O00020020270013000D00212O003D001500073O00122F001600283O00122F001700294O002E001500174O000600133O00020020270014000E00212O003D001600073O00122F0017002A3O00122F0018002B4O002E001600184O000600143O00020020270015000F00212O003D001700073O00122F0018002C3O00122F0019002D4O002E001700194O000600153O000200202700160010002E2O003D001800073O00122F0019002F3O00122F001A00304O00340018001A00022O003D001900073O00122F001A00313O00122F001B00324O00340019001B0002001203001A00333O002049001A001A0034002049001A001A0035000643001B0001000100012O00243O00084O003E0016001B00010020270016001000362O003D001800073O00122F001900373O00122F001A00384O00340018001A00022O003D001900073O00122F001A00393O00122F001B003A4O00340019001B000200022O001A00024O003E0016001A00010020270016001100362O003D001800073O00122F0019003B3O00122F001A003C4O00340018001A00022O003D001900073O00122F001A003D3O00122F001B003E4O00340019001B000200022O001A00034O003E0016001A00010020270016001100362O003D001800073O00122F0019003F3O00122F001A00404O00340018001A00022O003D001900073O00122F001A00413O00122F001B00424O00340019001B000200022O001A00044O003E0016001A00010020270016001100362O003D001800073O00122F001900433O00122F001A00444O00340018001A00022O003D001900073O00122F001A00453O00122F001B00464O00340019001B000200022O001A00054O003E0016001A00010020270016001100472O003D001800073O00122F001900483O00122F001A00494O00340018001A000200122F0019004A3O00022O001A00064O003E0016001A000100202700160011004B2O003D001800073O00122F0019004C3O00122F001A004D4O00340018001A00022O003D001900073O00122F001A004E3O00122F001B004F4O00340019001B000200122F001A00503O00122F001B00513O00022O001C00074O003E0016001C000100202700160011004B2O003D001800073O00122F001900523O00122F001A00534O00340018001A00022O003D001900073O00122F001A00543O00122F001B00554O00340019001B000200122F001A00563O00122F001B00573O00022O001C00084O003E0016001C00010020270016001200362O003D001800073O00122F001900583O00122F001A00594O00340018001A000200122F0019005A3O00022O001A00094O003E0016001A00010020270016001200362O003D001800073O00122F0019005B3O00122F001A005C4O00340018001A00022O003D001900073O00122F001A005D3O00122F001B005E4O00340019001B000200022O001A000A4O003E0016001A00010020270016001200362O003D001800073O00122F0019005F3O00122F001A00604O00340018001A00022O003D001900073O00122F001A00613O00122F001B00624O00340019001B000200022O001A000B4O003E0016001A00010020270016001200362O003D001800073O00122F001900633O00122F001A00644O00340018001A00022O003D001900073O00122F001A00653O00122F001B00664O00340019001B000200022O001A000C4O003E0016001A00010020270016001200362O003D001800073O00122F001900673O00122F001A00684O00340018001A00022O003D001900073O00122F001A00693O00122F001B006A4O00340019001B000200022O001A000D4O003E0016001A00010020270016001300362O003D001800073O00122F0019006B3O00122F001A006C4O00340018001A00022O003D001900073O00122F001A006D3O00122F001B006E4O00340019001B000200022O001A000E4O003E0016001A00010020270016001300362O003D001800073O00122F0019006F3O00122F001A00704O00340018001A00022O003D001900073O00122F001A00713O00122F001B00724O00340019001B000200022O001A000F4O003E0016001A00010020270016001300362O003D001800073O00122F001900733O00122F001A00744O00340018001A00022O003D001900073O00122F001A00753O00122F001B00764O00340019001B000200022O001A00104O003E0016001A00010020270016001300362O003D001800073O00122F001900773O00122F001A00784O00340018001A00022O003D001900073O00122F001A00793O00122F001B007A4O00340019001B000200022O001A00114O003E0016001A00010020270016001300362O003D001800073O00122F0019007B3O00122F001A007C4O00340018001A00022O003D001900073O00122F001A007D3O00122F001B007E4O00340019001B000200022O001A00124O003E0016001A00010020270016001300362O003D001800073O00122F0019007F3O00122F001A00804O00340018001A00022O003D001900073O00122F001A00813O00122F001B00824O00340019001B000200022O001A00134O003E0016001A00010020270016001300362O003D001800073O00122F001900833O00122F001A00844O00340018001A00022O003D001900073O00122F001A00853O00122F001B00864O00340019001B000200022O001A00144O003E0016001A00010020270016001300362O003D001800073O00122F001900873O00122F001A00884O00340018001A00022O003D001900073O00122F001A00893O00122F001B008A4O00340019001B000200022O001A00154O003E0016001A000100202700160013003600122F0018008B3O00122F0019008B3O00022O001A00164O003E0016001A00010020270016001300362O003D001800073O00122F0019008C3O00122F001A008D4O00340018001A00022O003D001900073O00122F001A008E3O00122F001B008F4O00340019001B000200022O001A00174O003E0016001A00010020270016001400362O003D001800073O00122F001900903O00122F001A00914O00340018001A00022O003D001900073O00122F001A00923O00122F001B00934O00340019001B000200022O001A00184O003E0016001A00010020270016001400362O003D001800073O00122F001900943O00122F001A00954O00340018001A00022O003D001900073O00122F001A00963O00122F001B00974O00340019001B000200022O001A00194O003E0016001A00010020270016001500982O003D001800073O00122F001900993O00122F001A009A4O002E0018001A4O004600163O00010020270016001500982O003D001800073O00122F0019009B3O00122F001A009C4O002E0018001A4O004600163O00010020270016001500982O003D001800073O00122F0019009D3O00122F001A009E4O002E0018001A4O004600163O00012O002A8O00123O00013O001A3O00033O00028O00026O00F03F026O00704002453O00122F000200014O0001000300043O00261600020007000100010004313O0007000100122F000300014O0001000400043O00122F000200023O000E3300020002000100020004313O0002000100122F000500013O0026160005000A000100010004313O000A000100261600030012000100020004313O001200012O000200066O003D000700044O0044000600074O003600065O00261600030009000100010004313O0009000100122F000600013O000E3300020019000100060004313O0019000100122F000300023O0004313O00090001000E3300010015000100060004313O001500012O002D00076O003D000400073O00122F000700024O002600085O00122F000900023O0004090007003D00012O0002000B00014O003D000C00044O0002000D00024O0002000E00034O0002000F00044O0002001000054O003D00116O003D0012000A3O0020180013000A00022O002E001000134O0006000F3O00022O0002001000044O0002001100054O003D001200014O0026001300014O00150013000A001300100B0013000200132O0026001400014O00150014000A001400100B0014000200140020180014001400022O002E001100144O003700106O0006000E3O000200200F000E000E00032O0004000D000E4O0046000B3O000100041000070021000100122F000600023O0004313O001500010004313O000900010004313O000A00010004313O000900010004313O004400010004313O000200012O00123O00017O00013O0003083O00546F2O676C65554900044O00027O0020275O00012O00173O000200012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O7470476574032C3O00682O7470733A2O2F63646E2E7765617265646576732E6E65742F736372697074732F42542O6F6C732E74787400083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403403O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4578756E79732F4553502D5363726970742F6D61696E2F4553502E6C756100083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403523O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F73696E7265742F7262787363726970742E636F6D2D736372697074732D726575706C6F6164732D2F6D61696E2F706C3100093O0012033O00013O001203000100023O00202700010001000300122F000300044O0021000400014O002E000100044O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O7470476574034F3O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4578756E79732F41696D626F742D5363726970742F6D61696E2F41696D626F742532305363726970742E6C756100093O0012033O00013O001203000100023O00202700010001000300122F000300044O0021000400014O002E000100044O00065O00022O002B3O000100012O00123O00017O000C3O00028O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F696403093O0057616C6B53702O6564026O005E4003093O004A756D70506F776572026O00F03F026O003040026O00494001473O0006053O001400013O0004313O0014000100122F000100013O00261600010003000100010004313O00030001001203000200023O00204900020002000300204900020002000400204900020002000500204900020002000600301F000200070008001203000200023O00204900020002000300204900020002000400204900020002000500204900020002000600301F0002000900080004313O004600010004313O000300010004313O0046000100122F000100014O0001000200043O000E33000A0040000100010004313O004000012O0001000400043O002616000200310001000A0004313O00310001000E330001001B000100030004313O001B000100122F000400013O0026160004001E000100010004313O001E0001001203000500023O00204900050005000300204900050005000400204900050005000500204900050005000600301F00050007000B001203000500023O00204900050005000300204900050005000400204900050005000500204900050005000600301F00050009000C0004313O004600010004313O001E00010004313O004600010004313O001B00010004313O0046000100261600020019000100010004313O0019000100122F000500013O00261600050039000100010004313O0039000100122F000300014O0001000400043O00122F0005000A3O002616000500340001000A0004313O0034000100122F0002000A3O0004313O001900010004313O003400010004313O001900010004313O0046000100261600010016000100010004313O0016000100122F000200014O0001000300033O00122F0001000A3O0004313O001600012O00123O00017O00063O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F696403093O0057616C6B53702O656401073O001203000100013O002049000100010002002049000100010003002049000100010004002049000100010005001042000100064O00123O00017O00063O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F696403093O004A756D70506F77657201073O001203000100013O002049000100010002002049000100010003002049000100010004002049000100010005001042000100064O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403443O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4564676549592F696E66696E6974657969656C642F6D61737465722F736F7572636500083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403903O00682O7470733A2O2F676973742E67697468756275736572636F6E74656E742E636F6D2F44696E6F736175725878582F623735376665302O31653765362O3063303837336639363766653432376463322F7261772F2O65353332342O3731663031373037336663333065363430333233616332613962336266632O35302F6461726B25323532306465782532353230763400083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D65030C3O00482O74704765744173796E63034C3O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F72696368696530382O362F6F7263612F6D61737465722F7075626C69632F736E617073686F742E6C756100083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403763O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F524F424C4F584841582F507269736F6E5F4C6966655F4861782F6D61737465722F212532302535424645253544253230526576697A25323041646D696E253230436D6425323025352O424553542535442E74787400083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403193O00682O7470733A2O2F2O706561726C2E76657263656C2E612O7000083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O7470476574033F3O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F47776E53746566616E6F2F4E657875734875622F6D61696E2F4D61696E00093O0012033O00013O001203000100023O00202700010001000300122F000300044O0021000400014O002E000100044O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403513O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F57696E74657244696E6465722F426F78696E672D467269656E64732D53696D756C61746F722F6D61696E2F4D61696E00093O0012033O00013O001203000100023O00202700010001000300122F000300044O0021000400014O002E000100044O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O7470476574036A3O006C6F6164737472696E672867616D653A482O74704765742822682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4D61726979614675726D616E6F76612F4C6962726172792F6D61696E2F4D616443697479222C20747275652O29282900083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403503O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F7476677565696D657238342F6A7368642O68666B61796875622F6D61696E2F75786A2O736F616B6875622E6C756100083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O004C3O000100022O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403433O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F547269784164652F50726F78696D612D4875622F6D61696E2F4D61696E2E6C756100083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403473O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4B69646963686948422F4B6964616368692F6D61696E2F536372697074732F2O4D325F563200083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O7470476574034D3O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F44726561647A487562322F44726561647A4875622D536372697074732D46522F6D61696E2F4C6F6164657200083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403483O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F416E647265774461726B2O792F4E4F5741592F6D61696E2F6461726B2O79776172652E6C756100083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O7470476574034D3O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4E756B655673436974792F546865412O4C4841434B4C6F616465722F6D61696E2F4E756B654C6F6164657200083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403453O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F666C69736B5363726970742F6A6172616E2E7669702F6D61696E2F66722O652E6C756100083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403213O00682O7470733A2O2F706173746562696E2E636F6D2F7261772F646A42666B384C6900083O0012033O00013O001203000100023O00202700010001000300122F000300044O002E000100034O00065O00022O002B3O000100012O00123O00017O00063O00028O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O7470476574034B3O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4E69637573652F526F626C6F78536372697074732F6D61696E2F427970612O736564466C792E6C75612O033O00466C7900163O00122F3O00014O0001000100013O0026163O0002000100010004313O0002000100122F000100013O00261600010005000100010004313O00050001001203000200023O001203000300033O00202700030003000400122F000500054O002E000300054O000600023O00022O002B000200010001001203000200064O0021000300014O00170002000200010004313O001500010004313O000500010004313O001500010004313O000200012O00123O00017O00",v9(),...);
