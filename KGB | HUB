--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.14) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==2) then function v22()local v31=0 -0 ;local v32;while true do if (v31==(2 -1)) then return v32;end if (v31==(0 -0)) then v32=v1(v16,v19,v19);v19=v19 + (2 -(932 -(857 + 74))) ;v31=620 -(555 + 64) ;end end end v23=nil;function v23()local v33,v34=v1(v16,v19,v19 + 2 );v19=v19 + (570 -(367 + 201)) ;return (v34 * (1183 -(214 + 713))) + v33 ;end v18=3;end if (v18==4) then function v25()local v35=0 + (997 -(915 + 82)) ;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v35==(1 + 0)) then v38=1;v39=(v21(v37,878 -((798 -516) + 595) ,1657 -(1523 + 67 + 47) ) * ((2 + 0)^((59 -14) -13))) + v36 ;v35=1067 -(68 + 997) ;end if (v35==(1272 -(226 + 1044))) then v40=v21(v37,91 -70 ,148 -(32 + 85) );v41=((v21(v37,32 + 0 )==1) and  -(1 + 0)) or (958 -(892 + 65)) ;v35=7 -(1191 -(1069 + 118)) ;end if (v35==(5 -2)) then if (v40==(0 -0)) then if (v39==(350 -(87 + 263))) then return v41 * 0 ;else v40=(410 -229) -(67 + 113) ;v38=0 + 0 ;end elseif (v40==((10992 -5967) -2978)) then return ((v39==(0 + 0)) and (v41 * ((3 -2)/0))) or (v41 * NaN) ;end return v8(v41,v40-1023 ) * (v38 + (v39/(((166 + 788) -(802 + 150))^(139 -87)))) ;end if (v35==(0 -(0 -0))) then v36=v24();v37=v24();v35=1 + 0 ;end end end v26=nil;function v26(v42)local v43;if  not v42 then v42=v24();if (v42==(0 + 0)) then return "";end end v43=v3(v16,v19,(v19 + v42) -(792 -(368 + 423)) );v19=v19 + v42 ;local v44={};for v66=3 -2 , #v43 do v44[v66]=v2(v1(v3(v43,v66,v66)));end return v6(v44);end v18=5;end if (v18==6) then v29=nil;function v29()local v45=0;local v46;local v47;local v48;local v49;local v50;local v51;while true do local v68=0 + 0 ;while true do if (v68~=(3 -2)) then else if (v45~=(1 + 0)) then else local v96=0 -0 ;while true do if (v96~=(0 -0)) then else local v103=0 -0 ;while true do if (v103==1) then v96=1;break;end if (v103~=(285 -(134 + 151))) then else v49={v46,v47,nil,v48};v50=v24();v103=1258 -(1043 + 214) ;end end end if (v96==(3 -2)) then v51={};v45=3 -1 ;break;end end end if (v45==(1993 -(582 + 1408))) then for v101=1,v24() do v47[v101-(3 -2) ]=v29();end return v49;end break;end if (v68~=(0 -0)) then else if (v45==(582 -(361 + 219))) then local v97=320 -(53 + 267) ;local v98;while true do if (v97==(0 -0)) then v98=0;while true do if (v98~=(0 -0)) then else local v104=0;while true do if ((413 -(15 + 398))==v104) then for v200=1825 -(1195 + 629) ,v50 do local v201=0 -0 ;local v202;local v203;local v204;local v205;while true do if ((1 -0)~=v201) then else v204=nil;v205=nil;v201=243 -(187 + 54) ;end if (v201==0) then v202=0 + 0 ;v203=nil;v201=781 -(162 + 618) ;end if (2==v201) then while true do if (v202==1) then v205=nil;while true do if (v203==(0 + 0)) then local v376=0;local v377;local v378;while true do if (v376==(0 + 0)) then v377=0 -0 ;v378=nil;v376=127 -(116 + 10) ;end if (v376==(1 + 0)) then while true do if (v377~=(0 -0)) then else v378=738 -(542 + 196) ;while true do if (v378==0) then local v386=0 + 0 ;local v387;while true do if ((0 + 0)==v386) then v387=0;while true do if (v387~=(0 + 0)) then else local v397=0 + 0 ;while true do if ((2 -1)~=v397) then else v387=1;break;end if (0~=v397) then else v204=v22();v205=nil;v397=2 -1 ;end end end if (v387~=(1637 -(1373 + 263))) then else v378=1001 -(451 + 549) ;break;end end break;end end end if (v378==(3 -2)) then v203=1122 -(118 + 1003) ;break;end end break;end end break;end end end if (v203~=1) then else if (v204==1) then v205=v22()~=(0 + 0) ;elseif (v204==(5 -3)) then v205=v25();elseif (v204==(4 -1)) then v205=v26();end v51[v200]=v205;break;end end break;end if (v202==(0 -0)) then v203=0 -0 ;v204=nil;v202=1385 -(746 + 638) ;end end break;end end end v49[2 + 1 ]=v22();v104=1 -0 ;end if ((342 -(218 + 123))==v104) then v98=1582 -(1535 + 46) ;break;end end end if (v98==(1 + 0)) then for v105=1 + 0 ,v24() do local v106=0 + 0 ;local v107;local v108;local v109;while true do if (v106==1) then v109=nil;while true do if (v107~=1) then else while true do if (v108~=0) then else v109=v22();if (v21(v109,1,1 + 0 )==(0 -0)) then local v370=560 -(306 + 254) ;local v371;local v372;local v373;local v374;local v375;while true do if (v370==(1 + 1)) then v375=nil;while true do if (v371==(2 -1)) then local v380=0 -0 ;while true do if (v380==(0 + 0)) then v374=nil;v375=nil;v380=4 -3 ;end if (1==v380) then v371=755 -(239 + 514) ;break;end end end if (0~=v371) then else local v381=0;while true do if (v381~=0) then else v372=0 + 0 ;v373=nil;v381=1468 -(899 + 568) ;end if (v381==(1 + 0)) then v371=2 -1 ;break;end end end if ((1331 -(797 + 532))==v371) then while true do if (v372~=(603 -(268 + 335))) then else local v382=290 -(60 + 230) ;while true do if (v382==(573 -(426 + 146))) then v372=2 -1 ;break;end if (v382==0) then v373=v21(v109,1 + 1 ,1459 -(282 + 1174) );v374=v21(v109,815 -(569 + 242) ,17 -11 );v382=1131 -(369 + 761) ;end end end if (v372~=3) then else if (v21(v374,1 + 2 ,1027 -(706 + 318) )==1) then v375[4]=v51[v375[1255 -(721 + 530) ]];end v46[v105]=v375;break;end if (v372~=(1272 -(945 + 326))) then else local v384=0 -0 ;while true do if ((238 -(64 + 174))==v384) then v375={v23(),v23(),nil,nil};if (v373==0) then local v390=0 + 0 ;local v391;local v392;while true do if ((1501 -(1408 + 92))==v390) then while true do if (v391~=0) then else v392=1086 -(461 + 625) ;while true do if (v392~=(1288 -(993 + 295))) then else v375[1 + 2 ]=v23();v375[4]=v23();break;end end break;end end break;end if (v390==0) then v391=1171 -(418 + 753) ;v392=nil;v390=1 + 0 ;end end elseif (v373==(1 + 0)) then v375[1 + 2 ]=v24();elseif (v373==(1 + 1)) then v375[532 -(406 + 123) ]=v24() -((1771 -(1749 + 20))^(12 + 4)) ;elseif (v373~=3) then else local v400=0 + 0 ;local v401;local v402;while true do if (v400==1) then while true do if (v401==(1975 -(1913 + 62))) then v402=0;while true do if (v402==0) then v375[2 + 1 ]=v24() -((5 -3)^(4 + 12)) ;v375[15 -11 ]=v23();break;end end break;end end break;end if (v400==(1322 -(1249 + 73))) then v401=0 + 0 ;v402=nil;v400=1146 -(466 + 679) ;end end end v384=1 -0 ;end if (v384~=(1 + 0)) then else v372=4 -2 ;break;end end end if ((2 -0)==v372) then local v385=0 -0 ;while true do if (v385~=(304 -(244 + 60))) then else if (v21(v374,2 -1 ,1901 -(106 + 1794) )==(1 + 0)) then v375[1 + 1 ]=v51[v375[2 + 0 ]];end if (v21(v374,2,2)==(1126 -(936 + 189))) then v375[8 -5 ]=v51[v375[7 -4 ]];end v385=1614 -(1565 + 48) ;end if (v385~=(115 -(4 + 110))) then else v372=587 -(57 + 527) ;break;end end end end break;end end break;end if (v370==(1 + 0)) then v373=nil;v374=nil;v370=2;end if (v370==0) then v371=1427 -(41 + 1386) ;v372=nil;v370=1139 -(782 + 356) ;end end end break;end end break;end if (v107==(103 -(17 + 86))) then local v337=0 + 0 ;while true do if (v337==(1 -0)) then v107=1093 -(975 + 117) ;break;end if (v337~=(1875 -(157 + 1718))) then else v108=0 + 0 ;v109=nil;v337=1;end end end end break;end if (v106==(0 -0)) then v107=0 -0 ;v108=nil;v106=167 -(122 + 44) ;end end end v45=3;break;end end break;end end end if ((0 -0)==v45) then local v99=0 -0 ;local v100;while true do if (v99~=0) then else v100=0;while true do if (0==v100) then v46={};v47={};v100=1 -0 ;end if (v100==(2 -1)) then v48={};v45=1;break;end end break;end end end v68=1 + 0 ;end end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v52)if (v1(v52,2)==79) then v20=v0(v3(v52,1,1));return "";else local v83=v2(v0(v52,16));if v20 then local v91=v5(v83,v20);v20=nil;return v91;else return v83;end end end);v18=1;end if (v18==3) then v24=nil;function v24()local v53,v54,v55,v56=v1(v16,v19,v19 + (5 -2) );v19=v19 + (10 -6) ;return (v56 * ((16779315 -(826 + 46)) -((1269 -(245 + 702)) + 905))) + (v55 * (66147 -(602 + 9))) + (v54 * (1445 -(449 + 740))) + v53 ;end v25=nil;v18=4;end if (v18==7) then function v30(v57,v58,v59)local v60=v57[1];local v61=v57[2];local v62=v57[3];return function(...)local v69=v60;local v70=v61;local v71=v62;local v72=v28;local v73=1;local v74= -1;local v75={};local v76={...};local v77=v12("#",...) -1 ;local v78={};local v79={};for v84=0,v77 do if (v84>=v71) then v75[v84-v71 ]=v76[v84 + 1 ];else v79[v84]=v76[v84 + 1 ];end end local v80=(v77-v71) + 1 ;local v81;local v82;while true do v81=v69[v73];v82=v81[1];if (v82<=40) then if (v82<=19) then if (v82<=9) then if (v82<=4) then if (v82<=1) then if (v82==0) then local v110=v81[2];local v111=v79[v110 + 2 ];local v112=v79[v110] + v111 ;v79[v110]=v112;if (v111>0) then if (v112<=v79[v110 + 1 ]) then v73=v81[3];v79[v110 + 3 ]=v112;end elseif (v112>=v79[v110 + 1 ]) then local v317=0;while true do if (v317==0) then v73=v81[3];v79[v110 + 3 ]=v112;break;end end end else local v114=0;local v115;local v116;local v117;local v118;while true do if (v114==1) then v74=(v117 + v115) -1 ;v118=0;v114=2;end if (v114==2) then for v318=v115,v74 do local v319=0;while true do if (v319==0) then v118=v118 + 1 ;v79[v318]=v116[v118];break;end end end break;end if (v114==0) then v115=v81[2];v116,v117=v72(v79[v115](v13(v79,v115 + 1 ,v81[3])));v114=1;end end end elseif (v82<=2) then local v119=v81[2];do return v79[v119](v13(v79,v119 + 1 ,v81[3]));end elseif (v82>3) then v79[v81[2]]={};else v79[v81[2]]=v81[3];end elseif (v82<=6) then if (v82>5) then v79[v81[2]]=v79[v81[3]]%v79[v81[4]] ;else local v121=v70[v81[3]];local v122;local v123={};v122=v10({},{__index=function(v186,v187)local v188=v123[v187];return v188[1][v188[2]];end,__newindex=function(v189,v190,v191)local v192=v123[v190];v192[1][v192[2]]=v191;end});for v194=1,v81[4] do v73=v73 + 1 ;local v195=v69[v73];if (v195[1]==18) then v123[v194-1 ]={v79,v195[3]};else v123[v194-1 ]={v58,v195[3]};end v78[ #v78 + 1 ]=v123;end v79[v81[2]]=v30(v121,v122,v59);end elseif (v82<=7) then v79[v81[2]]=v81[3]~=0 ;elseif (v82==8) then if (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end else v79[v81[2]]=v79[v81[3]][v81[4]];end elseif (v82<=14) then if (v82<=11) then if (v82>10) then v79[v81[2]]=v81[3] + v79[v81[4]] ;else local v127=v81[2];v79[v127]=v79[v127](v13(v79,v127 + 1 ,v81[3]));end elseif (v82<=12) then local v129=v81[2];local v130,v131=v72(v79[v129](v13(v79,v129 + 1 ,v74)));v74=(v131 + v129) -1 ;local v132=0;for v197=v129,v74 do v132=v132 + 1 ;v79[v197]=v130[v132];end elseif (v82==13) then local v211=v81[2];local v212={};for v282=1, #v78 do local v283=v78[v282];for v321=0, #v283 do local v322=v283[v321];local v323=v322[1];local v324=v322[2];if ((v323==v79) and (v324>=v211)) then v212[v324]=v323[v324];v322[1]=v212;end end end else for v284=v81[2],v81[3] do v79[v284]=nil;end end elseif (v82<=16) then if (v82>15) then v73=v81[3];else v79[v81[2]][v79[v81[3]]]=v81[4];end elseif (v82<=17) then v79[v81[2]]=v81[3];elseif (v82==18) then v79[v81[2]]=v79[v81[3]];else v79[v81[2]][v81[3]]=v81[4];end elseif (v82<=29) then if (v82<=24) then if (v82<=21) then if (v82==20) then do return;end elseif  not v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=22) then v79[v81[2]]=v59[v81[3]];elseif (v82==23) then local v218=v81[2];v79[v218](v79[v218 + 1 ]);else local v219=v81[2];local v220,v221=v72(v79[v219](v13(v79,v219 + 1 ,v81[3])));v74=(v221 + v219) -1 ;local v222=0;for v286=v219,v74 do v222=v222 + 1 ;v79[v286]=v220[v222];end end elseif (v82<=26) then if (v82==25) then local v140=v81[2];local v141=v79[v81[3]];v79[v140 + 1 ]=v141;v79[v140]=v141[v81[4]];elseif (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=27) then if  not v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end elseif (v82>28) then local v225=v81[2];v79[v225](v13(v79,v225 + 1 ,v74));else local v226=v70[v81[3]];local v227;local v228={};v227=v10({},{__index=function(v289,v290)local v291=v228[v290];return v291[1][v291[2]];end,__newindex=function(v292,v293,v294)local v295=v228[v293];v295[1][v295[2]]=v294;end});for v297=1,v81[4] do local v298=0;local v299;while true do if (v298==0) then v73=v73 + 1 ;v299=v69[v73];v298=1;end if (v298==1) then if (v299[1]==18) then v228[v297-1 ]={v79,v299[3]};else v228[v297-1 ]={v58,v299[3]};end v78[ #v78 + 1 ]=v228;break;end end end v79[v81[2]]=v30(v226,v227,v59);end elseif (v82<=34) then if (v82<=31) then if (v82>30) then v79[v81[2]]=v30(v70[v81[3]],nil,v59);else v79[v81[2]][v79[v81[3]]]=v81[4];end elseif (v82<=32) then local v148=v81[2];v79[v148](v79[v148 + 1 ]);elseif (v82>33) then v79[v81[2]]=v79[v81[3]]%v81[4] ;else local v231=v81[2];do return v13(v79,v231,v74);end end elseif (v82<=37) then if (v82<=35) then v79[v81[2]]={};elseif (v82==36) then local v232=v81[2];v79[v232]=v79[v232](v13(v79,v232 + 1 ,v74));else v79[v81[2]]=v59[v81[3]];end elseif (v82<=38) then v79[v81[2]]=v79[v81[3]] + v79[v81[4]] ;elseif (v82==39) then local v236=v81[2];v79[v236]=v79[v236]();else local v238=0;local v239;local v240;local v241;while true do if (v238==1) then v241=v79[v239 + 2 ];if (v241>0) then if (v240>v79[v239 + 1 ]) then v73=v81[3];else v79[v239 + 3 ]=v240;end elseif (v240<v79[v239 + 1 ]) then v73=v81[3];else v79[v239 + 3 ]=v240;end break;end if (0==v238) then v239=v81[2];v240=v79[v239];v238=1;end end end elseif (v82<=60) then if (v82<=50) then if (v82<=45) then if (v82<=42) then if (v82==41) then v79[v81[2]]=v79[v81[3]];else local v153=0;local v154;while true do if (v153==0) then v154=v81[2];v79[v154]=v79[v154](v13(v79,v154 + 1 ,v74));break;end end end elseif (v82<=43) then v79[v81[2]]= #v79[v81[3]];elseif (v82==44) then local v242=0;local v243;while true do if (v242==0) then v243=v81[2];v79[v243]=v79[v243](v79[v243 + 1 ]);break;end end else v79[v81[2]]=v58[v81[3]];end elseif (v82<=47) then if (v82>46) then local v156=v81[2];v79[v156]=v79[v156](v13(v79,v156 + 1 ,v81[3]));elseif v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=48) then v79[v81[2]][v81[3]]=v79[v81[4]];elseif (v82>49) then local v247=v81[2];local v248=v79[v81[3]];v79[v247 + 1 ]=v248;v79[v247]=v248[v81[4]];else local v252=v81[2];local v253=v79[v252 + 2 ];local v254=v79[v252] + v253 ;v79[v252]=v254;if (v253>0) then if (v254<=v79[v252 + 1 ]) then v73=v81[3];v79[v252 + 3 ]=v254;end elseif (v254>=v79[v252 + 1 ]) then v73=v81[3];v79[v252 + 3 ]=v254;end end elseif (v82<=55) then if (v82<=52) then if (v82==51) then v79[v81[2]]();else local v160=0;local v161;while true do if (0==v160) then v161=v81[2];do return v13(v79,v161,v74);end break;end end end elseif (v82<=53) then v79[v81[2]]=v58[v81[3]];elseif (v82==54) then local v256=v81[2];local v257={};for v303=1, #v78 do local v304=v78[v303];for v325=0, #v304 do local v326=v304[v325];local v327=v326[1];local v328=v326[2];if ((v327==v79) and (v328>=v256)) then v257[v328]=v327[v328];v326[1]=v257;end end end else local v258=0;local v259;while true do if (v258==0) then v259=v81[2];v79[v259](v13(v79,v259 + 1 ,v74));break;end end end elseif (v82<=57) then if (v82==56) then local v164=0;local v165;local v166;local v167;local v168;while true do if (0==v164) then v165=v81[2];v166,v167=v72(v79[v165](v79[v165 + 1 ]));v164=1;end if (v164==1) then v74=(v167 + v165) -1 ;v168=0;v164=2;end if (v164==2) then for v329=v165,v74 do v168=v168 + 1 ;v79[v329]=v166[v168];end break;end end else local v169=0;local v170;while true do if (0==v169) then v170=v81[2];v79[v170]=v79[v170](v79[v170 + 1 ]);break;end end end elseif (v82<=58) then v79[v81[2]]=v79[v81[3]] + v81[4] ;elseif (v82>59) then v79[v81[2]][v81[3]]=v79[v81[4]];else local v262=v81[2];local v263,v264=v72(v79[v262](v13(v79,v262 + 1 ,v74)));v74=(v264 + v262) -1 ;local v265=0;for v308=v262,v74 do local v309=0;while true do if (v309==0) then v265=v265 + 1 ;v79[v308]=v263[v265];break;end end end end elseif (v82<=70) then if (v82<=65) then if (v82<=62) then if (v82==61) then if v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end else v79[v81[2]]=v79[v81[3]]%v79[v81[4]] ;end elseif (v82<=63) then v79[v81[2]]=v79[v81[3]] + v81[4] ;elseif (v82>64) then local v267=v81[2];v79[v267]=v79[v267]();else v79[v81[2]]=v79[v81[3]][v81[4]];end elseif (v82<=67) then if (v82>66) then local v174=0;local v175;while true do if (v174==0) then v175=v81[2];do return v79[v175](v13(v79,v175 + 1 ,v81[3]));end break;end end else v73=v81[3];end elseif (v82<=68) then v79[v81[2]]=v79[v81[3]] + v79[v81[4]] ;elseif (v82==69) then v79[v81[2]]= #v79[v81[3]];else for v311=v81[2],v81[3] do v79[v311]=nil;end end elseif (v82<=75) then if (v82<=72) then if (v82==71) then local v178=v81[2];local v179=v79[v178];local v180=v79[v178 + 2 ];if (v180>0) then if (v179>v79[v178 + 1 ]) then v73=v81[3];else v79[v178 + 3 ]=v179;end elseif (v179<v79[v178 + 1 ]) then v73=v81[3];else v79[v178 + 3 ]=v179;end else v79[v81[2]][v81[3]]=v81[4];end elseif (v82<=73) then v79[v81[2]]=v81[3] + v79[v81[4]] ;elseif (v82>74) then do return;end else v79[v81[2]]=v79[v81[3]]%v81[4] ;end elseif (v82<=78) then if (v82<=76) then v79[v81[2]]=v81[3]~=0 ;elseif (v82==77) then v79[v81[2]]=v30(v70[v81[3]],nil,v59);elseif (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=79) then if (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82==80) then v79[v81[2]]();else local v275=v81[2];local v276,v277=v72(v79[v275](v79[v275 + 1 ]));v74=(v277 + v275) -1 ;local v278=0;for v313=v275,v74 do local v314=0;while true do if (v314==0) then v278=v278 + 1 ;v79[v313]=v276[v278];break;end end end end v73=v73 + 1 ;end end;end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v63,v64,v65)if v65 then local v87=0 -0 ;local v88;while true do if (v87==(0 + (0 -0))) then v88=(v63/((1900 -(260 + 1638))^(v64-((1124 -(483 + 200)) -((1845 -(1404 + 59)) + (823 -(468 + 297)))))))%(2^(((v65-((565 -(334 + 228)) -2)) -(v64-(1 + 0))) + (1 -0))) ;return v88-(v88%(2 -1)) ;end end else local v89=(4064 -2859) -(902 + (702 -399)) ;local v90;while true do if (v89==(0 -0)) then v90=(4 -2)^(v64-(1 + 0)) ;return (((v63%(v90 + v90))>=v90) and (1691 -(1121 + 569))) or (214 -(22 + 192)) ;end end end end v22=nil;v18=2;end end end vv9(),...);
